---
import TableOfContentsHeading from "../components/TableOfContentsHeading.astro";

const { headings } = Astro.props;
const toc = buildToc(headings);


function buildToc(headings) {
  const toc = [];
  const parentHeadings = new Map();
  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    if (heading.depth === 1) {
      toc.push(heading);
    } else {
      let parent = parentHeadings.get(heading.depth - 1);
      if (!parent) {
        // Znajdź najbliższego dostępnego rodzica wstecz – od najgłębszego nagłówka.
        for (let i = heading.depth - 1; i >= 1; i--) {
          parent = parentHeadings.get(i);
          if (parent) {
            break;
          }
        }
      }
      if(parent) {
        parent.subheadings.push(heading);
      } else {
        // Jeśli żaden rodzic nie jest znaleziony, ignoruj błąd i dodaj na poziomie toc.
        console.error(`Missing appropriate parent heading; placing ${heading.depth} at top level.`);
        toc.push(heading);
      }
    }
  });
  return toc;
}
---

<nav class="toc">
  <ul>
    {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
  </ul>
</nav>
