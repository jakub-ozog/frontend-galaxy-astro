---

interface BlogPostProps {
  title: string;
  description: string;
  customClass: string;
  author: string;
  tags: string[];
  slug: string;
  url: string;
  pubDate?: string; // optional publication date
}

const {title, description, pubDate, tags, slug, url} = Astro.props as BlogPostProps;

console.log(slug);
---

<article class="blog-post">
  <h2>
    <a href={url} class="post-title">{title}</a>
  </h2>
  <!-- {pubDate && <p class="post-date">Data publikacji: {pubDate}</p>} -->
  <p class="post-description">{description}</p>

  <ul class="post-tags">
    {tags?.map((tag) => <li class="post-single-tag">{tag}</li>)}
  </ul>

  <ul class="post-slug">
    {slug}
  </ul>
  

  <p class="post-read-more">
    <a href={slug}>Czytaj dalej &rsaquo;</a>
    
  </p>
</article>

<style>
  .blog-post {
    margin-bottom: 4rem;
    border-bottom: 1px solid var(--border-grey);
    padding: 1rem;
  }

  .post-title {
    font-size: 2rem;
  }

  .post-date {
    margin-top: 0.25rem;
    font-size: 0.75rem;
  }

  .post-tags {
    margin-top: 2rem;
    display: flex;
    flex-direction: row;
    gap: 1rem;
  }

  .post-single-tag {
    border: 1px solid var(--standard-white);
    padding: 0.25rem 0.5rem;
  }

  .post-read-more {
    margin-top: 2.5rem;
    text-decoration: underline;
  }
  .article-box {
    border: 1px solid white;
    border-radius: 10px;
    padding: 1rem 2rem;
    font-size: 1.5rem;
  }

  .article-box:hover {
    border: 1px dashed white;
  }

  .article-box > p {
    border: none;
    padding: 0;
    font-size: 1rem;
    margin-top: 1.25rem;
  }

  .blog-list-title {
    font-size: 2rem;
    margin-bottom: 2rem;
  }

  .blog-list-title > p {
    font-size: 1.25rem;
    margin-bottom: 2rem;
  }
</style>
